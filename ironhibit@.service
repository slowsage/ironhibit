# ~/.config/systemd/user/ironhibit@.service
#
# Template service that creates transient sleep inhibitor timers.
# Usage: systemctl --user start ironhibit@30m
#
# This service:
# - Parses duration arguments (30m, 2h, 90s, etc.) using systemd-analyze
# - Creates a transient ironhibit-timer unit via systemd-run
# - Uses systemd-inhibit to prevent sleep/suspend for the specified duration
# - Conflicts with other instances to ensure only one timer runs at a time
#
[Unit]
Description=Inhibit idle for %i
Conflicts=ironhibit@*.service

[Service]
ExecStart=/bin/sh -c '
  arg="%i"
  
  # Handle stop/cancel commands
  if [ "$arg" = "stop" ] || [ "$arg" = "cancel" ]; then
    systemctl --user stop ironhibit-timer.service
    exit 0
  fi
  
  # Parse duration using systemd-analyze (part of core systemd)
  dur_s=$(systemd-analyze timespan "$arg" 2>/dev/null | awk "/Î¼s in seconds/{print int(\$1/1000000)}")
  if [ -z "$dur_s" ] || [ "$dur_s" -le 0 ]; then
    echo "Invalid duration format: %i (use systemd timespan format like 30m, 2h, 90s)" >&2
    exit 1
  fi
  
  # Stop any existing timer and start new one
  systemctl --user stop ironhibit-timer.service >/dev/null 2>&1 || true
  systemd-run --quiet --user --unit=ironhibit-timer --setenv=INHIBIT_DURATION="$dur_s" \
    systemd-inhibit --what=idle:sleep --why="User ironhibit for %i" sleep "$dur_s"
'
